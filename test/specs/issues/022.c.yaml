- source: sscanf
  scopesBegin:
    - meta.function
    - meta.function.definition.parameters
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: user_input
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: '%c'
  scopes:
    - constant.other.placeholder
- source: '%'
  scopes:
    - invalid.illegal.placeholder
- source: '[^'
- source: \n
  scopes:
    - constant.character.escape
- source: ']'
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: '&'
  scopes:
    - keyword.operator
- source: arg0
  scopes:
    - variable.parameter.probably
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: ' arg_str'
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function
    - meta.function.definition.parameters
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' reads char into arg0, the remainder until \n to arg_str'
  scopesEnd:
    - comment.line.double-slash
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: test
  scopesBegin:
    - meta.function
    - meta.function.definition.parameters
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function
    - meta.function.definition.parameters
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: '    t '
- source: =
  scopes:
    - keyword.operator.assignment
- source: time
  scopesBegin:
    - meta.function-call
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round
- source: 'NULL'
  scopes:
    - constant.language
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round
  scopesEnd:
    - meta.function-call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '    tmp '
- source: =
  scopes:
    - keyword.operator.assignment
- source: localtime
  scopesBegin:
    - meta.function-call
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round
- source: '&'
  scopes:
    - keyword.operator
- source: t
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round
  scopesEnd:
    - meta.function-call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: strftime
  scopesBegin:
    - meta.function-call
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round
- source: timestr
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: sizeof
  scopes:
    - keyword.operator.sizeof
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: timestr
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: '%'
  scopes:
    - invalid.illegal.placeholder
- source: Y-
- source: '%'
  scopes:
    - invalid.illegal.placeholder
- source: m-
- source: '%d'
  scopes:
    - constant.other.placeholder
- source: '%'
  scopes:
    - invalid.illegal.placeholder
- source: 'H:'
- source: '%'
  scopes:
    - invalid.illegal.placeholder
- source: 'M:'
- source: '%s'
  scopes:
    - constant.other.placeholder
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: ' tmp'
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round
  scopesEnd:
    - meta.function-call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
