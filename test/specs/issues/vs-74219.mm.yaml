- source: '-'
  scopes:
    - keyword.operator
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: 'nonnull '
- source: NSArray
  scopes:
    - support.class.cocoa
- source: <
  scopes:
    - keyword.operator.comparison
- source: NSString
  scopes:
    - support.class.cocoa
- source: '*'
  scopes:
    - keyword.operator
- source: '>'
  scopes:
    - keyword.operator.comparison
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: 'getCameras '
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' get list of regular cameras'
  scopesEnd:
    - comment.line.double-slash
- source: '    AVCaptureDeviceDiscoverySession '
- source: '*'
  scopes:
    - keyword.operator
- source: 'session '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 'AVCaptureDeviceDiscoverySession '
- source: '        discoverySessionWithDeviceTypes:@'
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: AVCaptureDeviceTypeBuiltInWideAngleCamera
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: '        mediaType:AVMediaTypeVideo '
- source: '        position:AVCaptureDevicePositionUnspecified'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' create json object for each camera'
  scopesEnd:
    - comment.line.double-slash
- source: NSMutableArray
  scopes:
    - support.class.cocoa
- source: <
  scopes:
    - keyword.operator.comparison
- source: NSString
  scopes:
    - support.class.cocoa
- source: '*'
  scopes:
    - keyword.operator
- source: '>'
  scopes:
    - keyword.operator.comparison
- source: '*'
  scopes:
    - keyword.operator
- source: 'lst '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: NSMutableArray
  scopes:
    - support.class.cocoa
- source: ' alloc'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' init'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: for
  scopes:
    - keyword.control
- source: (
  scopesBegin:
    - meta.parens.block
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: 'AVCaptureDevice '
- source: '*'
  scopes:
    - keyword.operator
- source: 'device in '
- source: session
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: devices
  scopes:
    - variable.other.member
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens.block
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: NSString
  scopes:
    - support.class.cocoa
- source: '*'
  scopes:
    - keyword.operator
- source: 's '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: '{ '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 's stringByAppendingFormat:'
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: id
- source: \"
  scopes:
    - constant.character.escape
- source: ': '
- source: '%@'
  scopes:
    - constant.other.placeholder
- source: ', '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: device
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: uniqueID
  scopes:
    - variable.other.member
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 's stringByAppendingFormat:'
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: facing
- source: \"
  scopes:
    - constant.character.escape
- source: ': '
- source: '%@'
  scopes:
    - constant.other.placeholder
- source: ', '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: device
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: position
  scopes:
    - variable.other.member
- source: ==
  scopes:
    - keyword.operator.comparison
- source: ' AVCaptureDevicePositionFront '
- source: '?'
  scopes:
    - keyword.operator.ternary
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: front
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ':'
  scopes:
    - keyword.operator.ternary
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: back
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 's stringByAppendingFormat:'
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: orientation
- source: \"
  scopes:
    - constant.character.escape
- source: ': 0, '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 's stringByAppendingFormat:'
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: forcedShutterSound
- source: \"
  scopes:
    - constant.character.escape
- source: ': false'
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 's stringByAppendingString:'
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: ' }'
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: 'lst addObject:s'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
- source: return
  scopes:
    - keyword.control
- source: ' lst'
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
