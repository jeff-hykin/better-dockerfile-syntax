- source: asm
  scopesBegin:
    - meta.asm
  scopes:
    - storage.type.asm
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: .globl func
  scopesBegin:
    - meta.embedded.assembly
- source: '    .type func, @function'
- source: '    func:'
- source: '    .cfi_startproc'
- source: '    movl $7, %eax'
- source: '    retl'
- source: '    .cfi_endproc'
  scopesEnd:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly
  scopesEnd:
    - meta.asm
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: int
  scopes:
    - storage.type.built-in.primitive
- source: main
  scopesBegin:
    - meta.function
    - meta.function.definition.parameters
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function
    - meta.function.definition.parameters
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: int
  scopes:
    - storage.type.built-in.primitive
- source: ' n '
- source: =
  scopes:
    - keyword.operator.assignment
- source: func
  scopesBegin:
    - meta.function-call
  scopes:
    - entity.name.function
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round
  scopesEnd:
    - meta.function-call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' extended inline assembly'
  scopesEnd:
    - comment.line.double-slash
- source: asm
  scopesBegin:
    - meta.function-call
    - meta.asm
  scopes:
    - storage.type.asm
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: 'leal (%0,%0,4),%0'
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: ':'
  scopes:
    - punctuation.separator.delimiter.colon.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: =r
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: ' (n'
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly
  scopesEnd:
    - meta.function-call
    - meta.asm
- source: '         : '
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: '0'
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: (
  scopesBegin:
    - meta.parens.block
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: 'n'
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens.block
- source: )
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' standard inline assembly'
  scopesEnd:
    - comment.line.double-slash
- source: asm
  scopesBegin:
    - meta.function-call
    - meta.asm
  scopes:
    - storage.type.asm
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: 'movq $60, %rax'
  scopesBegin:
    - meta.embedded.assembly
- source: \n
  scopesBegin:
    - constant.character.escape
- source: \t
  scopesEnd:
    - meta.embedded.assembly
    - constant.character.escape
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' the exit syscall number on Linux'
  scopesEnd:
    - comment.line.double-slash
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: 'movq $2,  %rdi'
  scopesBegin:
    - meta.embedded.assembly
- source: \n
  scopesBegin:
    - constant.character.escape
- source: \t
  scopesEnd:
    - meta.embedded.assembly
    - constant.character.escape
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' this program returns 2'
  scopesEnd:
    - comment.line.double-slash
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: syscall
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly
  scopesEnd:
    - meta.function-call
    - meta.asm
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
