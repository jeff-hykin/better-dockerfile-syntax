- source: //
  scopesBegin:
    - comment.line.double-slash
    - punctuation.definition.comment
- source: //
  scopesEnd:
    - punctuation.definition.comment
- source: '  AppDelegate.m'
- source: //
  scopes:
    - punctuation.definition.comment
- source: '  SKNavigationControllerProject'
- source: //
  scopesBegin:
    - punctuation.definition.comment
- source: //
  scopesEnd:
    - punctuation.definition.comment
- source: '  Created by Selçuk Kızılkaya on 4/4/13.'
- source: //
  scopes:
    - punctuation.definition.comment
- source: '  Copyright (c) 2013 Selçuk Kızılkaya. All rights reserved.'
- source: //
  scopes:
    - punctuation.definition.comment
  scopesEnd:
    - comment.line.double-slash
- source: '#'
  scopesBegin:
    - meta.preprocessor.include
    - keyword.control.directive.import
  scopes:
    - punctuation.definition.directive
- source: import
  scopesEnd:
    - keyword.control.directive.import
- source: '"'
  scopesBegin:
    - string.quoted.double.include
  scopes:
    - punctuation.definition.string.begin
- source: AppDelegate.h
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double.include
- source: '#'
  scopesBegin:
    - keyword.control.directive.import
  scopes:
    - punctuation.definition.directive
- source: import
  scopesEnd:
    - keyword.control.directive.import
- source: '"'
  scopesBegin:
    - string.quoted.double.include
  scopes:
    - punctuation.definition.string.begin
- source: ViewController.h
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double.include
- source: '#'
  scopesBegin:
    - keyword.control.directive.import
  scopes:
    - punctuation.definition.directive
- source: import
  scopesEnd:
    - keyword.control.directive.import
- source: '"'
  scopesBegin:
    - string.quoted.double.include
  scopes:
    - punctuation.definition.string.begin
- source: SKNavigationController.h
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.preprocessor.include
    - string.quoted.double.include
- source: '@'
  scopesBegin:
    - meta.implementation
    - storage.type
  scopes:
    - punctuation.definition.storage.type
- source: implementation
  scopesEnd:
    - storage.type
- source: AppDelegate
  scopes:
    - entity.name.type
- source: '- '
  scopesBegin:
    - meta.scope.implementation
    - meta.function-with-body
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.definition.type.end
- source: dealloc
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.function
    - meta.return-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: _window release
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: _viewController release
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: super dealloc
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '- '
  scopesBegin:
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: BOOL
  scopes:
    - storage.type
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.return-type
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: 'UIApplication '
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.argument-type
- source: didFinishLaunchingWithOptions
  scopes:
    - entity.name.function.name-of-parameter
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: NSDictionary
  scopes:
    - support.class.cocoa
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: launchOptions
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.function
    - meta.argument-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: self
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: window
  scopes:
    - variable.other.member
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: UIWindow alloc
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' initWithFrame:'
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: UIScreen mainScreen
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' bounds'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' autorelease'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' Override point for customization after application launch.'
  scopesEnd:
    - comment.line.double-slash
- source: self
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: viewController
  scopes:
    - variable.other.member
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: ViewController alloc
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' initWithNibName:'
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: ViewController
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ' bundle:'
- source: nil
  scopes:
    - constant.language
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' autorelease'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '    SKNavigationController '
- source: '*'
  scopes:
    - keyword.operator
- source: ' nav '
- source: =
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: SKNavigationController alloc
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ' initWithRootViewController:'
- source: self
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: viewController
  scopes:
    - variable.other.member
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: self
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: window
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: rootViewController
  scopes:
    - variable.other.member
- source: =
  scopes:
    - keyword.operator.assignment
- source: ' nav'
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: nav release
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '['
  scopesBegin:
    - meta.bracket.square.access
  scopes:
    - punctuation.definition.begin.bracket.square
- source: self
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: window
  scopes:
    - variable.other.member
- source: ' makeKeyAndVisible'
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square
  scopesEnd:
    - meta.bracket.square.access
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: return
  scopes:
    - keyword.control
- source: 'YES'
  scopes:
    - constant.language
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '- '
  scopesBegin:
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.definition.type.end
- source: applicationWillResignActive
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.return-type
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: 'UIApplication '
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.function
    - meta.argument-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.'
- source: //
  scopes:
    - punctuation.definition.comment
- source: ' Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.'
  scopesEnd:
    - comment.line.double-slash
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '- '
  scopesBegin:
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.definition.type.end
- source: applicationDidEnterBackground
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.return-type
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: 'UIApplication '
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.function
    - meta.argument-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.'
- source: //
  scopes:
    - punctuation.definition.comment
- source: ' If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.'
  scopesEnd:
    - comment.line.double-slash
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '- '
  scopesBegin:
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.definition.type.end
- source: applicationWillEnterForeground
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.return-type
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: 'UIApplication '
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.function
    - meta.argument-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.'
  scopesEnd:
    - comment.line.double-slash
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '- '
  scopesBegin:
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.definition.type.end
- source: applicationDidBecomeActive
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.return-type
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: 'UIApplication '
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.function
    - meta.argument-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.'
  scopesEnd:
    - comment.line.double-slash
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '- '
  scopesBegin:
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: void
  scopes:
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.definition.type.end
- source: applicationWillTerminate
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.return-type
- source: ':'
  scopesBegin:
    - meta.argument-type
  scopes:
    - entity.name.function.name-of-parameter
    - punctuation.separator.arguments
- source: (
  scopes:
    - punctuation.definition.type.begin
- source: 'UIApplication '
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: application
  scopes:
    - variable.parameter.function
  scopesEnd:
    - meta.function
    - meta.argument-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.'
  scopesEnd:
    - comment.line.double-slash
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.scope.implementation
    - meta.function-with-body
    - meta.block
- source: '@'
  scopesBegin:
    - storage.type
  scopes:
    - punctuation.definition.storage.type
- source: end
